// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ------------------[ Core ENUM Start ]------------------- //
enum ROLES {
  ADMIN
  COMPANY_ADMIN
  COMPANY_PARTNER
  CONSUMER
}

enum THEME {
  DARK
  LIGHT
}

enum LANGUAGE {
  EN
  ES
  FR
  DE
  // Add more as needed
}

enum COLOR {
  RED
  ROSE
  DEFAULT
  VIOLET
  BLUE
  YELLOW
  GREEN
}
// ------------------[ Core ENUM End ]------------------- //


model User {
  id           String       @id @default(cuid())
  firstname    String
  lastname     String
  username     String       @unique
  email        String       @unique
  password     String
  otp          Int?
  otpExpired   Int?         // Unix timestamp
  isVerified   Boolean      @default(false)
  
  // Relations
  memberships  Membership[]
  ownedOrgs    Organization[] @relation("OrganizationOwner")
  
  // Metadata
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  @@map("users")
}


model Organization {
  id        String        @id @default(cuid())
  orgName   String
  email     String
  password  String
  phone     String
  isActive  Boolean       @default(true)
  
  // Flexible info object
  info      Json?         // Structure: { logo: String, currency: String, ... }
  
  // Relations
  userId    String        // Reference to User who owns/administers this org
  owner     User          @relation("OrganizationOwner", fields: [userId], references: [id], onDelete: Cascade)
  memberships Membership[]            // All memberships for this organization
  settings  Setting?                  // Organization settings
  
  // Metadata
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  @@map("organizations")
}


model Membership {
  id        String   @id @default(cuid())
  userId    String
  orgId     String
  rootOrgId String   // Reference to root organization
  roles     ROLES[]  // Array of roles for this user in this organization
  permissions Json // Object of Permission which will helps to assign a permission to the user to do a specific actions
  
  // Relations
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  organization Organization @relation(fields: [orgId], references: [id], onDelete: Cascade)
  
  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, orgId])
  @@map("memberships")
}


model Setting {
  id        String   @id @default(cuid())
  orgId     String   @unique // Scoped to organization (one-to-one)
  
  // Preferences
  theme     THEME    @default(LIGHT)
  language  LANGUAGE @default(EN)
  color     COLOR    @default(DEFAULT)
  
  // Relations
  organization Organization @relation(fields: [orgId], references: [id], onDelete: Cascade)
  
  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("settings")
}

this is my prisma code i have create for my project?